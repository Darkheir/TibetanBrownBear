"""Tests for the Malware API."""

import json
import pytest

from yeti.webapp import app

app.testing = True
client = app.test_client()

# pylint: disable=fixme
# TODO: Consider using pytest-flask for easier testing flask stuff, e.g.:
# - Access to url_for objects to test routes
# - Access to .json attribute of request

@pytest.mark.usefixtures("clean_db")
def test_index(populate_malware):
    """Test that fetched Malware objects are well-formed"""
    names = [malware.name for malware in populate_malware]
    for name in names:
        query_json = {'name': name}
        rv = client.post('/api/entities/filter/', data=query_json)
        response = json.loads(rv.data)
        for item in response:
            assert isinstance(item['id'], int)
            assert len(item['family']) >= 1

@pytest.mark.usefixtures("clean_db", "populate_malware")
def test_malware_creation():
    query_json = {'name': 'TestMalware', 'family': ['trojan'], 'type': 'entity.malware'}
    rv = client.post('/api/entities/', data=query_json)
    response = json.loads(rv.data)
    assert rv.status_code == 200
    assert response['id'] is not None
    assert response['family'] == ['trojan']
